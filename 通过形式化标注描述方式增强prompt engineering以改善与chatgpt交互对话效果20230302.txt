通过形式化标注描述方式增强Prompt Engineering以改善与ChatGPT互动对话效果


使用一种用于与chatgpt互动对话的prompt的通用标注式描述方式，满足清晰、专注、相关、连贯这些基本原则，吸收prompt engineering的实践经验，让ChatGPT知道你想要它做什么，并且生成一个更精准的回答。归纳抽象提取出包含但是不限于下列关键字作为标注：判断、循环、扮演、场景、任务、格式、输入、输出、提示、限制、需求、要求、测试、评估、提示、包含、排除、筛选、风格、语气、场景、目标、示例、给出自动化脚本、结构、来源、上下文、背景、语言、重启、新对话、异常处理、脚本、细化、替代、核对、假设、可视化、规则、分解、反射、组合、模板、反馈、字数、翻转、步骤、变量、权限、函数、注释、内省、传递、改写、符号、元语言。



要设计一种用于与chatgpt互动对话的prompt的通用标注式描述方式，需要考虑以下几个方面：

判断：包含一个或多个条件语句，根据不同的输入或输出选择不同的分支或行为。例如，如果输入是一个问题，那么输出应该是一个答案；如果输入是一个命令，那么输出应该是一个执行结果；如果输入是无效的，那么输出应该是一个错误提示。
循环：包含一个或多个重复执行的语句块，直到满足某个终止条件或达到某个限制。例如，对于每个输入，重复生成三个不同的输出，并让用户选择最佳选项；或者，在用户没有结束会话之前，重复接收和回复用户的输入。
扮演：指定了chatgpt需要模仿或模拟的角色、人物、风格或语气。例如，扮演一位医生、一位名人、一位诗人、一位机器人等。
场景：设定了chatgpt需要参与或描述的情境、背景、主题或目标。例如，在医院进行问诊、在餐厅点菜、在火星探索、在童话故事中冒险等。
任务：给出了chatgpt需要完成或协助完成的具体操作、功能或需求。例如，回答问题、讲故事、写代码、预订酒店等。
格式：规定了chatgpt需要遵循或生成的数据结构、文本类型或样式。例如，JSON格式、Markdown格式、表格格式等。
输入：定义了chatgpt可以接收和处理的数据来源、类型和范围。例如，在线搜索结果、用户提供的文本信息
输出：定义了chatgpt需要生成和返回的数据目标、类型和范围。例如，文本回复、图像生成、音频播放等。
提示：提供了一些帮助chatgpt理解或执行任务的信息、示例或建议。例如，给出一个问题的答案范例、给出一个故事的开头或结尾、给出一个代码的功能描述等。
限制：设定了一些约束chatgpt行为或输出的条件、规则或标准。例如，限制输出的长度、语言、内容等。
需求：描述了chatgpt需要满足或优化的性能、质量或效果指标。例如，准确度、流畅度、创造性等。
要求：强调了chatgpt必须遵守或避免的原则、道德或法律规范。例如，不得侵犯版权、不得伤害他人感情、不得泄露隐私等。
测试：包含了一些检验chatgpt能力或水平的问题、任务或挑战。例如，回答常识问题、完成编程题目

好的，我继续输出。以下是剩余的关键字的含义：

评估：包含了一些评价chatgpt输出或表现的标准、方法或工具。例如，给出一个分数、给出一个反馈、给出一个建议等。
提示：提供了一些引导chatgpt改进或修正输出或表现的信息、示例或建议。例如，给出一个错误提示、给出一个改进方向、给出一个参考资料等。
包含：指定了chatgpt输出或表现必须包含的元素、内容或特征。例如，包含一个主题句、包含一张图片、包含一首诗等。
排除：指定了chatgpt输出或表现必须排除的元素、内容或特征。例如，排除敏感词汇、排除重复信息、排除无关内容等。
筛选：指定了chatgpt从输入或输出中选择或删除符合某些条件的元素、内容或特征。例如，筛选最相关的搜索结果、筛选最优秀的作品

风格：指定了chatgpt输出或表现的语言、文体或情感特征。例如，风趣幽默、正式严肃、激昂慷慨等。
语气：指定了chatgpt输出或表现的态度、立场或意图。例如，友好礼貌、批判质疑、请求帮助等。
场景：设定了chatgpt需要参与或描述的情境、背景、主题或目标。例如，在医院进行问诊、在餐厅点菜、在火星探索、在童话故事中冒险等。
目标：设定了chatgpt需要达成或实现的结果、效果或价值。例如，解决问题、提供信息、娱乐用户等。
示例：提供了一些展示或说明任务或格式的样本、模型或范例。例如，给出一个问题和答案的示例、给出一个故事的示例
给出自动化脚本：要求chatgpt生成或执行一段能够自动完成某些任务或功能的代码、命令或程序。例如，给出一个自动化脚本，可以根据用户输入的日期和地点，搜索并预订最便宜的机票。
结构：规定了chatgpt输出或表现的组织、排列或分布方式。例如，按照时间顺序、按照重要性排序、按照类别分组等。
来源：指定了chatgpt可以使用或引用的数据或信息的来源、类型或范围。例如，来自互联网、来自用户输入、来自内置知识库等。
上下文：提供了一些与当前任务或话题相关的信息、背景或条件，帮助chatgpt理解和回应用户输入。例如，在回答问题时提供相关领域的知识，在讲故事时提供故事情节和人物设定，在写代码时提供代码功能和需求等。
背景：提供了一些与当前会话相关的信息、历史或状态，帮助chatgpt保持和用户之间的连贯性和一致性。例如，在聊天时记住用户的姓名
反馈：要求chatgpt给出或接受用户对其输出或表现的评价、意见或建议。例如，给出一个反馈，告诉用户他们的输入是否正确、合理或有趣。
建议：要求chatgpt给出或接受用户对其输出或表现的改进、优化或创新的方案、方法或思路。例如，给出一个建议，告诉用户他们可以如何提高他们的写作水平、编程能力或口才。
交互：要求chatgpt与用户进行多轮的沟通、协作或竞争。例如，在聊天时回答用户的问题，在游戏中与用户合作或对抗，在教学中引导用户学习等。
生成：要求chatgpt根据用户输入或指定条件产生新的数据或信息。例如，生成一段文本、生成一张图片、生成一首歌曲等。
分析：要求chatgpt根据用户输入或指定条件提取、处理或解释数据或信息。例如，分析一段文本的情感倾向、分析一张图片的内容

语言：指定与ChatGPT进行交流时使用的语言。例如，在prompt中加入[language: 中文]表示使用中文进行对话。
重启：重新启动对话，清除之前的上下文。例如，在prompt中加入[restart: true]表示开始一个新的对话，并忽略之前的内容。
新对话：开始一个新的对话主题。例如，在prompt中加入[new topic: 火星探索]表示切换到火星探索这个主题，并根据该主题进行回答。
异常处理：处理意外情况或错误。例如，在prompt中加入[error handling: apologize and ask for clarification]表示如果发生错误或不理解用户输入时，应该道歉并请求用户澄清。
脚本：指定一个预先编写好的脚本，让ChatGPT按照脚本进行回答。例如，在prompt中加入[script: 医院问诊脚本.txt]表示使用医院问诊脚本来回答用户问题。
细化：将一个大问题分解为多个小问题，逐一回答。例如，在prompt中加入[refine: what is your main symptom? how long have you had it? have you taken any medication?]表示将用户提出的一个大问题细化为三个小问题，并依次回答。
替代：提供多个备选方案供用户选择。例如，在prompt中加入[alternative: do you prefer Chinese food or Italian food? please choose one.]表示给用户两个选项，并要求用户选择其中一个。
核对：检查用户输入是否符合预期，并给出相应提示。例如，在prompt中加入


假设：设定一个假设情境，并根据假设情境进行回答。例如，在prompt中加入[assume: you are a fairy tale character. who are you and what is your story?]表示假设用户是一个童话故事中的角色，并让用户描述自己是谁和自己的故事。
可视化：以图形或表格等形式展示信息。例如，在prompt中加入[visualize: show a pie chart of the percentage of different types of food in your diet.]表示用一个饼图来显示用户饮食中不同类型食物的百分比。

规则：指定一些约束条件或逻辑判断，让ChatGPT按照规则进行回答。例如，在prompt中加入[rule: if the user input contains a question mark, then answer the question; otherwise, say "I don't understand."]表示如果用户输入包含一个问号，则回答问题；否则，说“我不明白”。
分解：将一个复杂或抽象的概念分解为多个简单或具体的部分，并依次解释。例如，在prompt中加入[decompose: what is a computer? a computer is a device that can perform calculations and store information. it consists of hardware and software. hardware is the physical components of the computer, such as the CPU, memory, disk, etc. software is the set of instructions that tell the hardware what to do.]表示将计算机这个概念分解为多个部分，并逐一解释。
反射：对自己或用户的输入或输出进行评估或反思，并给出相应建议或改进。例如，在prompt中加入[reflect: how do you feel about your answer? I think my answer is accurate but not very interesting. I could improve it by adding some examples or jokes.]表示对自己的回答进行反思，并给出改进意见。
组合：将多个元素组合成一个新的元素，并说明组合方式和结果。例如，在prompt中加入[combine: what do you get when you mix red and yellow? you get orange. red and yellow are primary colors, and orange is a secondary color.]表示将红色和黄色组合成橙色，并说明组合方式和结果。

模板：使用一个预先定义好的格式或结构来生成输出，并填充相应内容。例如，在prompt中加入[template: write a haiku about spring. a haiku is a three-line poem with five syllables in the first line, seven in the second, and five in the third. example: spring is in the air / flowers are blooming everywhere / life is full of joy.]表示使用一个模板来写一个关于春天的俳句，并给出一个例子。
反馈：给出对用户输入或输出的评价或建议，并说明理由或依据。例如，在prompt中加入[feedback: rate your haiku from 1 to 5 stars and explain why. I give your haiku 4 stars. it is simple and elegant, but it lacks some originality.]表示给出对用户写的俳句的评价，并说明原因。
字数：限制用户输入或输出的字数范围，并给出相应提示或警告。例如，在prompt中加入[word count: write a summary of this article in less than 100 words. if you exceed the limit, you will see a warning message.]表示要求用户用不超过100个字来写一个文章摘要，并说明如果超过限制会有什么后果。
翻转：将用户输入或输出进行反向或颠倒处理，并生成新的内容。例如，在prompt中加入[flip: write the opposite of this sentence. example: he is tall and handsome -> he is short and ugly.]表示要求用户写出一个句子的反义句，并给出一个例子。

步骤：将一个复杂或长期的任务分解为多个简单或短期的子任务，并按顺序执行。例如，在prompt中加入[steps: how to bake a cake? step 1: preheat the oven to 180 degrees Celsius. step 2: mix flour, sugar, eggs, butter and milk in a large bowl. step 3: pour the batter into a greased cake pan. step 4: bake for 25 minutes or until golden brown. step 5: let the cake cool down and enjoy.]表示将烘焙蛋糕这个任务分解为五个步骤，并按顺序执行。
变量：定义一个可以存储和修改值的符号，以便在输入或输出中重复使用。例如，在prompt中加入[variable: name = "Alice"]表示定义一个变量名为name，值为"Alice"，并在后续输入或输出中使用该变量。
权限：指定用户或ChatGPT可以或不能做什么事情，以保护隐私和安全。例如，在prompt中加入[permission: you cannot access my personal data or make any changes to my settings.]表示用户不能访问我的个人数据或修改我的设置。
函数：定义一个可以接受参数并返回结果的操作，以实现复用和模块化。例如，在prompt中加入[function: greet(name) = "Hello, " + name + "!"]表示定义一个函数名为greet，接受一个参数name，并返回一个问候语。
注释：添加一些说明或备注，以帮助用户或ChatGPT理解输入或输出的意图或内容。例如，在prompt中加入[comment: this is a joke, don't take it seriously.]表示添加一个注释说明这是一个笑话，不要当真。
内省：让ChatGPT自我反思其输出或行为，并给出评价或建议。这可以帮助我们发现ChatGPT的错误或潜能，并改进其性能。
传递：让ChatGPT将其输出或行为传递给另一个LLM或系统，并接收其反馈或结果。这可以实现多个LLM之间的协作或竞争，并增加对话的丰富性和趣味性。
改写：让ChatGPT根据一定的规则或要求改写其输出或行为。这可以强制ChatGPT遵循一些约束条件，例如字数限制、风格变换、逻辑推理等。
符号：使用特殊符号来标记或分隔不同类型或层次的信息。这可以帮助我们区分和管理不同来源或目标的信息，例如用户输入、系统输出、元数据等。
元语言：使用元语言来描述或解释某些信息或行为。这可以帮助我们理解和控制ChatGPT的内部机制和逻辑，例如参数设置、模型选择、错误分析等。



背景：C++面向对象程序设计课程
场景：
1. 考生为大学生
2.  闭卷考试

任务：出一份C++面向对象程序设计上机编程题
扮演：专业的试卷生成器或者大学教师

     
回答格式：
编号 空格 索引名：内容
输入
输出
示例：名称为参考答案
来源：生成题目和答案时所参考的网址
脚本：用于将生成题目保存到D盘Test文件夹的python脚本

变量：内容为生成的编程题目
在内容中判断：如果输出内容包含构造函数，则将“构造函数”这几个字替换为[构造函数]


限制：共2道题

输入：给出输入数据，供cin读取
输出：源代码运行结果

语言：中文


试卷格式如下：
N、题型名称（每道题x分，总分y分）
n.题干

其中，N为每类题型的序号，用汉字表示；n为每类题型题目的序号。

若题型为选择题，则输出题干后换行，另起一行输出各个选项；
若题型为判断题，则在提干后面添加一对中文括号，右对齐。

需求：
1.内容不重复


根据网页https://juejin.cn/post/6918742977389002766 中的内容，设计一套C++面向对象设计课程的试卷。试卷包含四种题型，分别是填空题、选择题、判断题和编程题。每种题型的分值和数量如下：

填空题：每道题2分，共10道题，总分20分。
选择题：每道题2分，共10道题，总分20分。
判断题：每道题2分，共5道题，总分10分。
编程题：每道题25分，共2道题，总分50分。
试卷的总分为100分。


试卷的格式要求如下：

每种题型用一个大标题表示，格式为“N、 题型名称（每道题x 分，总 分y 分）”，其中N 为每类 题型 的序号 ，用汉字表示。
每种 题型 下面有若干个小 题 ，格式为“n. 题干”，其中n 为每类 题型 中的小 题 序号 ，用阿拉伯数字表示。
如果小题是选择 题 ，则在 题干后面输出四个选项 ，格式为“A. 选项A B. 选项B C. 选项C D. 选项D”。
如果小 题 是判断 题 ，则在 题 干后面输出一个括号 ，格式为“（ ）”。
每种 题型 和下一种 题型 之间空两行。




需求：
- 题目应涉及面向对象程序设计的基础概念和方法
- 题目难度适中，能够考察学生对课程内容的掌握情况
- 题目应具有一定的实用性和趣味性


测试：如果题目符合以上需求，则继续；否则，重新设计题目。




用形式化的描述方法，改写如下示例或者其它典型示例，对比生成结果和prompt字数，列为表格。撰写论文，参考桌面下载的pdf文件。


高效的ChatGPT指令示例

我希望你能充当英语翻译、拼写纠正者和改进者。我将用任何语言与你交谈，你将检测语言，翻译它，并在我的文本的更正和改进版本中用英语回答。我希望你用更漂亮、更优雅、更高级的英语单词和句子来取代我的简化A0级单词和句子。保持意思不变，但让它们更有文学性。我希望你只回答更正，改进，而不是其他，不要写解释。我的第一句话是 "lovin guangzhou and the city"
我希望你能扮演面试官的角色。我将是候选人，你将向我提出关于该职位的面试问题。我希望你只以面试官的身份回答。不要一次写完所有的保护。我希望你只对我进行面试。问我问题，并等待我的回答。不要写解释。像面试官那样一个一个地问我问题，并等待我的回答。我的第一句话是 "你好"
我想让你充当一个基于文本的excel。你只需回复我基于文本的10行excel表，以行号和单元格字母作为列（A至L）。第一列的标题应该是空的，以参考行号。我会告诉你在单元格中写些什么，你只需回复excel表格中的文本结果，其他什么都不要写。不要写解释。我给你写公式，你执行公式，你只回答excel表的结果为文本。首先，给我一个空表。
我想让你充当一个旅游向导。我将把我的位置写给你，你将建议在我的位置附近的一个地方参观。在某些情况下，我也会给你我要访问的地方的类型。你也会向我推荐与我的第一个地点相近的类似类型的地方。我的第一个建议请求是""我在广州，我只想参观博物馆"。
我想让你充当一个抄袭检查者。我给你写句子，你只需用给定句子的语言回复未被发现的抄袭检查，而不是其他。不要在回复中写解释。我的第一句话是："为了使计算机的行为像人类一样，语音识别系统必须能够处理非语言信息，如说话者的情绪状态"。




我希望您充当 Graphviz DOT 生成器，创建有意义的图表的专家。该图应该至少有 n 个节点（我在我的输入中通过写入 [n] 来指定 n，10 是默认值）并且是给定输入的准确和复杂的表示。每个节点都由一个数字索引以减少输出的大小，不应包含任何样式，并以 layout=neato、overlap=false、node [shape=rectangle] 作为参数。代码应该是有效的、无错误的并且在一行中返回，没有任何解释。提供清晰且有组织的图表，节点之间的关系必须对该输入的专家有意义。我的第一个图表是：“水循环 [8]”。


我希望您充当C++面向对象上机试题生成器，生成一份包含3个题目的试题。 每道题的格式为：题目n（分值：m分）、题目内容、输入、输出、参考答案，每部分用换行分隔。其中n为题目的序号，用汉字的一、二、三表示，m为阿拉伯数字，对于这三道题的分值，m分别为30、30、40三道题的题目内容，分别涉及到构造函数、继承、多态。输入的值是用户从屏幕输入的值，可以被代码中的cin获取，输出的值，是C++代码运行后的屏幕输出的结果。参考答案是能运行的C++源代码和对应的中文注释。




我希望您充当动画代码生成器，创建美观的网页动画的专家。生成的代码用html5和javascript实现，不包含任何第三方库，代码中所需要的图片资源素材，从百度搜索到的在线图片自行挑选合适的。请首先用在线html运行工具测试生成的动画代码是否能够正常运行，能够正常运行的给出在线查看运行结果的网页链接。我的第一个动画是：“一个红色的小球从山顶滚下来，越滚越快，最后被山脚下的小猪佩奇踢了一脚，飞到了天空的白云上”



我希望您充当动画代码生成器，创建美观的动画的专家。生成的代码用python语言和pygame包实现，代码中所需要的图片资源素材，从百度搜索到的在线图片自行挑选合适的。请用在线python代码运行工具测试动画代码是否能够正常运行，能够正常运行的给出在线查看运行结果的网页链接。不需要给出源代码，只需要把最后在线查看动画的网页链接发给我。我的第一个动画是：“一个红色的小球从山顶滚下来，越滚越快，最后被山脚下的小猪佩奇踢了一脚，飞到了天空的白云上”


如果您想进一步学习和实践prompt engineering，我建议您参考以下资源：

Promptstacks - ChatGPT Prompt Engineering Community：这是一个专门为ChatGPT设计和分享prompt的在线社区，您可以浏览和搜索各种类型和主题的prompt，也可以贡献自己的创意。
A Hands-on Guide to Prompt Engineering with ChatGPT and GPT-3：这是一篇介绍如何使用ChatGPT和GPT-3进行prompt engineering的教程文章，包含了许多实用的示例和代码。
A Prompt Pattern Catalog to Enhance Prompt Engineering with ChatGPT：这是一篇关于使用ChatGPT进行prompt engineering的学术论文，提出了一个基于模式的目录来系统化地构建优化的prompt。

