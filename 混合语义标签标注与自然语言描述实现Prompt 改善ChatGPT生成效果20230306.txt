混合语义标签标注与自然语言描述实现Prompt改善ChatGPT生成效果





摘要：
Prompt engineering 是人工智能，特别是自然语言处理（NLP）中的一个概念。在 prompt engineering 中，任务的描述嵌入在输入中，例如作为问题而不是隐含给出1。它是一种非常新颖但迅速发展的学科，旨在设计给定生成模型和目标的最佳提示2。Prompt engineering 是为生成型 AI 引擎（如 ChatGPT 和 Dall E）制定输入指令的过程，以生成更准确、更精确的输出。Prompt engineering 的主要目的是通过为这些 AI 引擎提供特定和相关的输入指令来帮助它们产生期望的输出1。有效的 prompt engineering 对于从生成型 AI 模型中生成高质量输出至关重要，因为它可以帮助确保模型生成与期望输出相关、连贯且一致的内容23。

引言


一、 现有Prompt Engineering方法的局限：


二、 混合标签式标注与自然语言描述实现Prompt的探索必要性：

1. 基本语法规则

每个关键字后面跟一个冒号（:），然后是具体内容。具体内容可以是文字、数字、符号等任意形式。如果具体内容包含多个部分，请用逗号（,）隔开。如果具体内容包含子关键字，请用括号（()）括起来，并在子关键字后面跟一个冒号（:）和子内容。如果子内容包含多个部分，请用分号（;）隔开。如果子内容包含孙关键字，请用方括号（[]）括起来，并在孙关键字后面跟一个冒号（:）和孙内容。以此类推，可以使用不同形状的括号来表示不同层级的关键字和内容。
每个Prompt以一个句号（.）结束。如果有多个Prompt，请用换行符（\n）分隔。


语法方面，可以考虑使用更简洁和一致的符号来表示不同层级的关键字和内容，例如使用冒号（:）和逗号（,）来分隔同一层级的关键字和内容，使用花括号（{}）来包含下一层级的关键字和内容。这样可以避免使用过多不同形状的括号，提高可读性和易用性。
关键字方面，可以考虑增加或修改一些关键字来更精确地描述用户思路，例如增加一个目标（goal）关键字来说明用户想要达到的效果或结果，修改一个类比（analogy）关键字为参考（reference）关键字来说明用户想要参考或借鉴的对象或事物。这样可以避免使用过于模糊或不恰当的词汇，提高准确性和适用性。

语法方面，可以考虑使用更简洁和一致的符号来表示不同层级的关键字和内容，例如使用冒号（:）和逗号（,）来分隔同一层级的关键字和内容，使用花括号（{}）来包含下一层级的关键字和内容。这样可以避免使用过多不同形状的括号，提高可读性和易用性。
关键字方面，可以考虑增加或修改一些关键字来更精确地描述用户思路，例如增加一个目标（goal）关键字来说明用户想要达到的效果或结果，修改一个类比（analogy）关键字为参考（reference）关键字来说明用户想要参考或借鉴的对象或事物。这样可以避免使用过于模糊或不恰当的词汇，提高准确性和适用性。


2. 关键字集合

设计一种采用标签式标注来准确详细描述用户思路的方法，最终形成Prompt用于直接跟ChatGPT对话，我建议你使用以下关键字集合：


任务相关的关键字：，，，，，，。这些关键字用于描述用户想要完成的任务的基本信息和要求。
内容相关的关键字：。这些关键字用于描述用户想要生成的内容的特征和属性。
的关键字：。这些关键字用于描述用户想要生成的代码或算法的逻辑结构和元素。

关键字可以区分为通用关键字和专用关键字。两者的区别，主要在于：对于通用关键字，ChatGPT能够结合对话上下文准确理解其含义；而对于专用的关键字，ChatGPT不确定能否准确理解，可能需要根据回答效果，进一步加以定义和解释，或者在对话之前预先定义和解释。




元语言：使用元语言来描述或解释某些信息或行为。这可以帮助我们理解和控制ChatGPT的内部机制和逻辑，例如参数设置、模型选择、错误分析等。




用作标签的通用关键字的逻辑分组以及具体含义

分组关键字含义示例任务相关任务(task)需要完成或协助完成的具体操作、功能或需求生成一份程序设计考卷, 回答问题、讲故事、写代码、预订酒店等。
需求需要满足或优化的性能、质量或效果指标准确度、流畅度、创造性等要求必须遵守或避免的原则、道德或法律规范不得侵犯版权、不得伤害他人感情、不得泄露隐私等结构输出或表现的组织、排列或分布方式按照时间顺序、按照重要性排序、按照类别分组等格式(format)输出的内容的形式, 需要遵循或生成的数据结构、文本类型或样式Markdown、HTML、Python等, JSON格式、Markdown格式、表格格式等目标(goal)需要达成或实现的结果、效果或价值解决问题、提供信息、娱乐用户等。参考(reference)参考或模仿的对象或事物某个名人、某本书籍限制(limit)遵守的条件或约束。约束chatgpt行为或输出的条件、规则或标准字数、时间、难度。限制输出的长度、语言、内容等鼓励(encourage)展现的特点或优势创造性、逻辑性、多样性禁止不想让ChatGPT做的事情抄袭、生成敏感内容场景(scenario)需要参与或描述的情境、背景、主题或目标在医院进行问诊、在餐厅点菜、在火星探索、在童话故事中冒险等提示给出一些提示或示例来引导或启发ChatGPT的输出。帮助chatgpt理解或执行任务的信息、示例或建议。一些引导chatgpt改进或修正输出或表现的信息、示例或建议问题的开头、答案的结构等。给出一个问题的答案范例、给出一个故事的开头或结尾、给出一个代码的功能描述等。给出一个错误提示、给出一个改进方向、给出一个参考资料等。权限指定用户或ChatGPT可以或不能做什么事情，以保护隐私和安全。
例如，在prompt中加入[permission: you cannot access my personal data or make any changes to my settings.]表示用户不能访问我的个人数据或修改我的设置。规则指定一些约束条件或逻辑判断，让ChatGPT按照规则进行回答。例如，在prompt中加入[rule: if the user input contains a question mark, then answer the question; otherwise, say "I don't understand."]表示如果用户输入包含一个问号，则回答问题；否则，说“我不明白”。背景提供了一些与当前会话相关的信息、历史或状态，帮助chatgpt保持和用户之间的连贯性和一致性在聊天时记住用户的姓名假设假设：设定一个假设情境，并根据假设情境进行回答。
例如，在prompt中加入[assume: you are a fairy tale character. who are you and what is your story?]表示假设用户是一个童话故事中的角色，并让用户描述自己是谁和自己的故事。流程相关上下文提供了一些与当前任务或话题相关的信息、背景或条件，帮助chatgpt理解和回应用户输入在回答问题时提供相关领域的知识，在讲故事时提供故事情节和人物设定，在写代码时提供代码功能和需求等输入可以接收和处理的数据来源、类型和范围在线搜索结果、用户提供的文本信息输出需要生成和返回的数据目标、类型和范围文本回复、图像生成、音频播放等测试包含了一些检验chatgpt能力或水平的问题、任务或挑战回答常识问题、完成编程题目评估一些评价chatgpt输出或表现的标准、方法或工具给出一个分数、给出一个反馈、给出一个建议等异常处理意外情况或错误在prompt中加入[error handling: apologize and ask for clarification]表示如果发生错误或不理解用户输入时，应该道歉并请求用户澄清。步骤步骤：将一个复杂或长期的任务分解为多个简单或短期的子任务，并按顺序执行。例如，在prompt中加入[steps: how to bake a cake? step 1: preheat the oven to 180 degrees Celsius. step 2: mix flour, sugar, eggs, butter and milk in a large bowl. step 3: pour the batter into a greased cake pan. step 4: bake for 25 minutes or until golden brown. step 5: let the cake cool down and enjoy.]表示将烘焙蛋糕这个任务分解为五个步骤，并按顺序执行。
反射： 对自己或用户的输入或输出进行评估或反思，并给出相应建议或改进。例如，在prompt中加入[reflect: how do you feel about your answer? I think my answer is accurate but not very interesting. I could improve it by adding some examples or jokes.]表示对自己的回答进行反思，并给出改进意见。
内省： 
让ChatGPT自我反思其输出或行为，并给出评价或建议。这可以帮助我们发现ChatGPT的错误或潜能，并改进其性能。流程让ChatGPT将其输出或行为传递给另一个LLM或系统，并接收其反馈或结果。这可以实现多个LLM之间的协作或竞争，并增加对话的丰富性和趣味性。输入相关台词指定一个预先编写好的脚本，让ChatGPT按照脚本进行回答。例如，在prompt中加入[script: 医院问诊脚本.txt]表示使用医院问诊脚本来回答用户问题。添加一些说明或备注，以帮助用户或ChatGPT理解输入或输出的意图或内容。在prompt中加入[comment: this is a joke, don't take it seriously.]表示添加一个注释说明这是一个笑话，不要当真。生成相关包含输出或表现必须包含的元素、内容或特征包含一个主题句、包含一张图片、包含一首诗等排除指定了chatgpt输出或表现必须排除的元素、内容或特征排除敏感词汇、排除重复信息、排除无关内容等筛选从输入或输出中选择或删除符合某些条件的元素、内容或特征筛选最相关的搜索结果、筛选最优秀的作品来源指定了chatgpt可以使用或引用的数据或信息的来源、类型或范围来自互联网、来自用户输入、来自内置知识库等模板模板：使用一个预先定义好的格式或结构来生成输出，并填充相应内容。
例如，在prompt中加入[template: write a haiku about spring. a haiku is a three-line poem with five syllables in the first line, seven in the second, and five in the third. example: spring is in the air / flowers are blooming everywhere / life is full of joy.]表示使用一个模板来写一个关于春天的俳句，并给出一个例子。反馈要求chatgpt给出或接受用户对其输出或表现的评价、意见或建议。给出对用户输入或输出的评价或建议，并说明理由或依据。给出一个反馈，告诉用户他们的输入是否正确、合理或有趣。例如，在prompt中加入[feedback: rate your haiku from 1 to 5 stars and explain why. I give your haiku 4 stars. it is simple and elegant, but it lacks some originality.]表示给出对用户写的俳句的评价，并说明原因。建议要求chatgpt给出或接受用户对其输出或表现的改进、优化或创新的方案、方法或思路。给出一个建议，告诉用户他们可以如何提高他们的写作水平、编程能力或口才。方法相关示例提供了一些展示或说明任务或格式的样本、模型或范例给出一个问题和答案的示例、给出一个故事的示例逐步交互要求chatgpt与用户进行多轮的沟通、协作或竞争在聊天时回答用户的问题，在游戏中与用户合作或对抗，在教学中引导用户学习等重启重新启动对话，清除之前的上下文在prompt中加入[restart: true]表示开始一个新的对话，并忽略之前的内容。细化： 将一个大问题分解为多个小问题，逐一回答。在prompt中加入[refine: what is your main symptom? how long have you had it? have you taken any medication?]表示将用户提出的一个大问题细化为三个小问题，并依次回答。替代：。提供多个备选方案供用户选择在prompt中加入[alternative: do you prefer Chinese food or Italian food? please choose one.]表示给用户两个选项，并要求用户选择其中一个。核对： 检查用户输入是否符合预期，并给出相应提示。例如，在prompt中加入组合： 将多个元素组合成一个新的元素，并说明组合方式和结果在prompt中加入[combine: what do you get when you mix red and yellow? you get orange. red and yellow are primary colors, and orange is a secondary color.]表示将红色和黄色组合成橙色，并说明组合方式和结果。
分解分解：将一个复杂或抽象的概念分解为多个简单或具体的部分，并依次解释。
例如，在prompt中加入[decompose: what is a computer? a computer is a device that can perform calculations and store information. it consists of hardware and software. hardware is the physical components of the computer, such as the CPU, memory, disk, etc. software is the set of instructions that tell the hardware what to do.]表示将计算机这个概念分解为多个部分，并逐一解释。翻转让ChatGPT来提问，用户回答内容相关主题(theme)风格(style)输出或表现的语言、文体或情感特征风趣幽默、正式严肃、激昂慷慨等。角色(character)你和ChatGPT之间的关系或身份。指定了chatgpt需要模仿或模拟的角色、人物、风格或语气老师和学生、同事和客户。扮演一位医生、一位名人、一位诗人、一位机器人等情节(plot)对话(dialogue)语言(language)与ChatGPT进行交流时使用的语言在prompt中加入[language: 中文]表示使用中文进行对话语气输出或表现的态度、立场或意图友好礼貌、批判质疑、请求帮助等逻辑相关判断(judge)，，，出一些判断或评价标准来检验或反馈ChatGPT的输出。包含一个或多个条件语句，根据不同的输入或输出选择不同的分支或行为正确与否、得分多少。如果输入是一个问题，那么输出应该是一个答案；如果输入是一个命令，那么输出应该是一个执行结果；如果输入是无效的，那么输出应该是一个错误提示。，循环(loop)出一些循环或重复的规则来控制或调整ChatGPT的输出。
包含一个或多个重复执行的语句块，直到满足某个终止条件或达到某个限制每个问题有几个选项、每个选项有几个字母等。对于每个输入，重复生成三个不同的输出，并让用户选择最佳选项；或者，在用户没有结束会话之前，重复接收和回复用户的输入。条件(condition)变量(variable)定义一个可以存储和修改值的符号，以便在输入或输出中重复使用。
例如，在prompt中加入[variable: name = "Alice"]表示定义一个变量名为name，值为"Alice"，并在后续输入或输出中使用该变量。函数(function)定义一个可以接受参数并返回结果的操作，以实现复用和模块化。
例如，在prompt中加入[function: greet(name) = "Hello, " + name + "!"]表示定义一个函数名为greet，接受一个参数name，并返回一个问候语。



专业关键字，类似于DSL （Domain Specific Language）。



3. Prompt示例及ChatGPT回答效果
（1） 示例一、生成一份程序设计考卷

任务:生成一份程序设计考卷. 格式:Markdown. 限制:题目数量(10),时间(60分钟),难度(中). 禁止:抄袭(从网上复制粘贴),生成敏感内容(涉及政治,宗教,暴力等). 鼓励:创造性(出新颖有趣的题目),逻辑性(出符合编程逻辑和规范的题目),多样性(出涉及不同领域和知识点的题目). 角色:我是老师,你是学生. 类比:参考《Python编程从入门到实践》这本书. 提示:

题目类型有选择题,填空题,简答题三种.选择题有四个选项,A,B,C,D.填空题有一个或多个空格.简答题需要写出完整可运行的代码.
题目



（2） 示例二、生成一首五言绝句
格式:文本
目标:表达对春天的喜爱
参考:唐诗《春晓》
限制:不超过20个字
鼓励:创造性,押韵,意境
场景:我是诗人,你是我的朋友

（3） 示例三、生成一段Python代码
任务:生成一段Python代码

格式:代码块
目标:实现一个计算器功能
参考:《Python编程从入门到实践》第7章
限制:不使用第三方库
鼓励:逻辑性,简洁性,注释
场景:我是程序员,你是我的同事
任务:生成一篇新闻摘要

（4） 示例三、生成新闻


格式:文本
目标:概括新闻主要内容和观点
参考:Bing搜索结果中的新闻标题和摘要
搜索查询:“美国总统访问中国”




4. 小结




三、 按此种方式自动生成Prompt的可行性


四、 半自动生成最终Prompt的步骤




五、 总结


合适的文本描述，  根据少量示例或没有示例；追加提示，.在提示和给定的新测试数据点的条件下，语言模型生成答案，例如将 E’ 追加到提示中并从模型中生成 C’。



是，确定提示文本中演示示例的操作方式仍处于早期阶段。从一些早期的工作中，我们现在理解到，演示样本的格式比标签的正确性更重要（例如，如图 1 所示，我们不需要提供翻译示例，但只需要提供语言说明），但它的可适应性是否有理论上的限制，如 “没有免费的午餐” 定理所述？提示中陈述的上下文和指令式的知识能否集成到模型中以供未来使用？这些问题只是开始探讨。因此，我们呼吁对这种新形式的上下文学习及其理论限制和性质进行新的理解和新的原则，例如研究泛化的界限在哪里。


ChatGPT 使用上下文学习和提示工程来在单个会话中驱动与人的多轮对话，即给定问题或提示，整个先前的对话（问题和回答）被发送到系统作为额外的上下文来构建响应。这是一个简单的对话驱动的马尔可夫决策过程（MDP）模型：

{状态 = 上下文，行动 = 响应，奖励 = 赞 / 踩评级}。

虽然有效，但这种策略具有以下缺点：首先，提示只是提供了用户响应的描述，但用户真正的意图可能没有被明确说明，必须被推断。也许一个强大的模型，如之前针对对话机器人提出的部分可观察马尔可夫决策过程（POMDP），可以准确地建模隐藏的用户意图。


其次，ChatGPT 首先以拟合语言的生成为目标使用语言适应性进行训练，然后使用人类标签进行对话目标的训练 / 微调。由于平台的开放性质，实际用户的目标和目的可能与训练 / 微调的奖励不一致。为了检查人类和代理（智能体）之间的均衡和利益冲突，使用博弈论的视角可能是值得的。

如何根据ChatGPT的特点，有针对性地优化，有待研究。

如第 1 部分介绍的新学习流程所示，提示和上下文学习消除了数据工程的瓶颈以及构建和训练模型所需的工作量。此外，利用推理能力可以使我们自动分解和解决困难任务的每个子任务。因此，它将大大改变许多行业和应用领域。

学习最新的数据，微调模型？



而第二个是其嵌入的语义和早期推理能力（以人类语言形式存在）。作为接口，前者将极大地降低应用机器学习的入门门槛，而后者将显著地推广机器学习的应用范围。

语义标签



创新提示工程、流程和软件支持

定义具体，收集数据，微调训练模型，获取答案评估结果，循环迭代，人在回路半自动， 

现在ChatGPT限定步数和文字Token数量，类似计算机早期内存的限制，需要精打细算，类似于C语言。











第一步：
让ChatGPT以关键字作为标签的方式，自动生成Prompt。
将用户的初步大致思路，描述为任务，通过自测。

根据一种采用标签式标注来准确详细描述用户思路的方法，最终形成Prompt用于直接跟ChatGPT对话。可以使用一些关键字作为标签清晰并且有条理地向chatgpt说明自己的思路，采用的关键字包含但不限于：任务、格式、限制、禁止、鼓励、角色、类比、提示、判断、循环、要求、测试。最终写好的Prompt格式为关键字:具体内容；关键字:具体内容。将ChatGPT当做一台计算机，将Prompt当做一门程序设计语言，编写的Prompt相当于用来操作ChatGPT输出的程序源代码。
请给出设计好的关键字集合，以及对应的语法规则，并以生成一份程序设计考卷为例，输出编写好的Prompt，并设置条件，让ChatGPT对这些Prompt进行测试。


第二步：
让ChatGPT解释为什么选用这些关键字和关键字的具体含义。根据ChatGPT的输出，启发思路，增加新的关键字或者具体内容， 修改完善chatgpt自动生成的Prompt。

第三步，
使用Prompt输出，观察或者测试结果，反复到第二步。


您好，这是Bing。我可以尝试为您分析这种生成Prompt的方法，但请注意，这不是我的专业领域，所以我的回答可能不完全准确或全面。🙏
根据您给出的背景、场景、任务、扮演、回答格式等要素，我认为这种生成Prompt的方法有以下特点：
• 它使用了标签式标注和自然语言描述相结合的方式来定义生成Prompt的条件和要求。标签式标注可以帮助ChatGPT识别出关键词和变量，自然语言描述可以帮助ChatGPT理解上下文和目的。
• 它使用了编号、索引名、内容等格式来组织生成Prompt的信息，使其更加清晰和规范。这样可以方便ChatGPT按照指定的顺序和结构来生成相应的内容。
• 它使用了在内容中判断、限制等语句来对生成Prompt的内容进行一些约束和过滤，使其更加符合题目要求和逻辑。这样可以避免ChatGPT生成一些不相关或错误的内容。
我认为这种生成Prompt的方法有以下优点：
• 它可以利用ChatGPT强大的自然语言理解和生成能力，根据给定的条件和要求，快速地生成一些符合C++面向对象程序设计上机编程题目特点和难度的题目。
• 它可以灵活地调整生成Prompt的各个要素，以适应不同的背景、场景、任务、扮演等需求。例如，可以改变扮演角色为学生或者考官，改变回答格式为选择题或者填空题等。
• 它可以通过参考网上已有的C++面向对象程序设计上机编程题目及其答案，提高生成Prompt的质量和可信度。例如，在搜索结果中找到一些例题，并将其作为参考来源或者示例。
我认为这种生成Prompt的方法有以下缺点：
• 它需要对C++面向对象程序设计上机编程题目有一定的专业知识和经验，才能准确地定义生成Prompt所需
好的，我继续分析这种生成Prompt的方法的缺点：
• 它需要对ChatGPT的工作原理和能力有一定的了解，才能合理地使用标签式标注和自然语言描述相结合的方式来指导生成Prompt。例如，需要知道哪些关键词和变量可以被ChatGPT识别和替换，哪些语句可以被ChatGPT执行和判断等。
• 它可能无法保证生成Prompt的内容完全符合C++面向对象程序设计上机编程题目的规范和正确性，因为ChatGPT可能会根据自己的模型和数据来生成一些不合理或错误的内容。例如，可能会生成一些语法错误或逻辑错误的代码，或者一些与题目要求不符或重复的题目等。


要想让ChatGPT生成更准确的输出，你需要编写一个合适的prompt，即为语言模型提供的指令和背景信息。prompt工程是开发和优化prompt的实践，可以帮助我们更有效地利用语言模型完成各种任务1。
一般来说，编写一个好的prompt需要考虑以下几个方面：
• 明确目标：你要让ChatGPT完成什么样的任务？是问答、摘要、翻译、创作还是其他？你期望得到什么样的输出？输出应该具有什么样的格式、长度、风格等？
• 提供示例：你可以给ChatGPT提供一些输入和输出的示例，让它学习其中的规律和模式。示例越多越具体，越能帮助ChatGPT理解你的意图和需求。
• 设置约束：你可以给ChatGPT设置一些约束条件，限制它的输出范围和质量。例如，你可以指定输出中不能包含某些词语或内容，或者必须满足某些标准或规则。
• 调整参数：你可以调整ChatGPT的一些参数，影响它的生成行为和结果。例如，你可以调整温度（temperature）、重复率（repetition_penalty）、最大长度（max_length）等参数。
以上是一些基本的技巧，具体如何编写prompt还需要根据不同的任务和场景进行尝试和优化。如果你想了解更多关于prompt工程的案例和方法，请参考以下链接123。






根据论文中定义的关键字，将关键字作为标签来标注描述和ChatGPT对话的prompts的方法是：
• 使用方括号[]来表示关键字，例如[判断]、[循环]、[扮演]等。
• 在方括号内部，可以使用冒号:来表示关键字的属性或参数，例如[判断:条件]、[循环:次数]、[扮演:角色]等。
• 在方括号外部，可以使用其他符号或语法来表示关键字之间的逻辑或顺序关系，例如&&表示并且，||表示或者，->表示然后等。



其次，我认为你应该提供更多的细节和例子，说明你是如何使用形式化标注来描述ChatGPT的prompts。你在论文中只给了一个例子，但如果你能展示更多的情况，并与其他prompt engineering方法进行比较，会更有说服力。
第三，我认为你应该定量和定性地评估你的方法。你只报告了一些主观印象的对话质量，但没有提供任何指标或基准来客观地衡量它。你还应该将你的方法与其他最先进的prompt engineering方法进行比较，并展示它是如何提高ChatGPT的性能的。
最后，我认为你应该讨论你的方法的局限性和未来工作。你没有提到使用形式化标注进行prompt engineering有哪些挑战或缺点。也没有建议任何改进或扩展你的方法到其他任务或领域的方法。








使用一种用于与chatgpt互动对话的prompt的通用标注式描述方式，满足清晰、专注、相关、连贯这些基本原则，吸收prompt engineering的实践经验，让ChatGPT知道你想要它做什么，并且生成一个更精准的回答。归纳抽象提取出包含但是不限于下列关键字作为标注：判断、循环、扮演、场景、任务、格式、输入、输出、提示、限制、需求、要求、测试、评估、提示、包含、排除、筛选、风格、语气、场景、目标、示例、给出自动化脚本、结构、来源、上下文、背景、语言、重启、新对话、异常处理、脚本、细化、替代、核对、假设、可视化、规则、分解、反射、组合、模板、反馈、字数、翻转、步骤、变量、权限、函数、注释、内省、传递、改写、符号、元语言。



要设计一种用于与chatgpt互动对话的prompt的通用标注式描述方式，需要考虑以下几个方面：





背景：C++面向对象程序设计课程
场景：
1. 考生为大学生
2.  闭卷考试

任务：出一份C++面向对象程序设计上机编程题
扮演：专业的试卷生成器或者大学教师

     
回答格式：
编号 空格 索引名：内容
输入
输出
示例：名称为参考答案
来源：生成题目和答案时所参考的网址
脚本：用于将生成题目保存到D盘Test文件夹的python脚本

变量：内容为生成的编程题目
在内容中判断：如果输出内容包含构造函数，则将“构造函数”这几个字替换为[构造函数]


限制：共2道题

输入：给出输入数据，供cin读取
输出：源代码运行结果

语言：中文


试卷格式如下：
N、题型名称（每道题x分，总分y分）
n.题干

其中，N为每类题型的序号，用汉字表示；n为每类题型题目的序号。

若题型为选择题，则输出题干后换行，另起一行输出各个选项；
若题型为判断题，则在提干后面添加一对中文括号，右对齐。

需求：
1.内容不重复


根据网页https://juejin.cn/post/6918742977389002766 中的内容，设计一套C++面向对象设计课程的试卷。试卷包含四种题型，分别是填空题、选择题、判断题和编程题。每种题型的分值和数量如下：

填空题：每道题2分，共10道题，总分20分。
选择题：每道题2分，共10道题，总分20分。
判断题：每道题2分，共5道题，总分10分。
编程题：每道题25分，共2道题，总分50分。
试卷的总分为100分。


试卷的格式要求如下：

每种题型用一个大标题表示，格式为“N、 题型名称（每道题x 分，总 分y 分）”，其中N 为每类 题型 的序号 ，用汉字表示。
每种 题型 下面有若干个小 题 ，格式为“n. 题干”，其中n 为每类 题型 中的小 题 序号 ，用阿拉伯数字表示。
如果小题是选择 题 ，则在 题干后面输出四个选项 ，格式为“A. 选项A B. 选项B C. 选项C D. 选项D”。
如果小 题 是判断 题 ，则在 题 干后面输出一个括号 ，格式为“（ ）”。
每种 题型 和下一种 题型 之间空两行。




需求：
- 题目应涉及面向对象程序设计的基础概念和方法
- 题目难度适中，能够考察学生对课程内容的掌握情况
- 题目应具有一定的实用性和趣味性


测试：如果题目符合以上需求，则继续；否则，重新设计题目。




用形式化的描述方法，改写如下示例或者其它典型示例，对比生成结果和prompt字数，列为表格。撰写论文，参考桌面下载的pdf文件。


高效的ChatGPT指令示例

我希望你能充当英语翻译、拼写纠正者和改进者。我将用任何语言与你交谈，你将检测语言，翻译它，并在我的文本的更正和改进版本中用英语回答。我希望你用更漂亮、更优雅、更高级的英语单词和句子来取代我的简化A0级单词和句子。保持意思不变，但让它们更有文学性。我希望你只回答更正，改进，而不是其他，不要写解释。我的第一句话是 "lovin guangzhou and the city"
我希望你能扮演面试官的角色。我将是候选人，你将向我提出关于该职位的面试问题。我希望你只以面试官的身份回答。不要一次写完所有的保护。我希望你只对我进行面试。问我问题，并等待我的回答。不要写解释。像面试官那样一个一个地问我问题，并等待我的回答。我的第一句话是 "你好"
我想让你充当一个基于文本的excel。你只需回复我基于文本的10行excel表，以行号和单元格字母作为列（A至L）。第一列的标题应该是空的，以参考行号。我会告诉你在单元格中写些什么，你只需回复excel表格中的文本结果，其他什么都不要写。不要写解释。我给你写公式，你执行公式，你只回答excel表的结果为文本。首先，给我一个空表。
我想让你充当一个旅游向导。我将把我的位置写给你，你将建议在我的位置附近的一个地方参观。在某些情况下，我也会给你我要访问的地方的类型。你也会向我推荐与我的第一个地点相近的类似类型的地方。我的第一个建议请求是""我在广州，我只想参观博物馆"。
我想让你充当一个抄袭检查者。我给你写句子，你只需用给定句子的语言回复未被发现的抄袭检查，而不是其他。不要在回复中写解释。我的第一句话是："为了使计算机的行为像人类一样，语音识别系统必须能够处理非语言信息，如说话者的情绪状态"。




我希望您充当 Graphviz DOT 生成器，创建有意义的图表的专家。该图应该至少有 n 个节点（我在我的输入中通过写入 [n] 来指定 n，10 是默认值）并且是给定输入的准确和复杂的表示。每个节点都由一个数字索引以减少输出的大小，不应包含任何样式，并以 layout=neato、overlap=false、node [shape=rectangle] 作为参数。代码应该是有效的、无错误的并且在一行中返回，没有任何解释。提供清晰且有组织的图表，节点之间的关系必须对该输入的专家有意义。我的第一个图表是：“水循环 [8]”。


我希望您充当C++面向对象上机试题生成器，生成一份包含3个题目的试题。 每道题的格式为：题目n（分值：m分）、题目内容、输入、输出、参考答案，每部分用换行分隔。其中n为题目的序号，用汉字的一、二、三表示，m为阿拉伯数字，对于这三道题的分值，m分别为30、30、40三道题的题目内容，分别涉及到构造函数、继承、多态。输入的值是用户从屏幕输入的值，可以被代码中的cin获取，输出的值，是C++代码运行后的屏幕输出的结果。参考答案是能运行的C++源代码和对应的中文注释。




我希望您充当动画代码生成器，创建美观的网页动画的专家。生成的代码用html5和javascript实现，不包含任何第三方库，代码中所需要的图片资源素材，从百度搜索到的在线图片自行挑选合适的。请首先用在线html运行工具测试生成的动画代码是否能够正常运行，能够正常运行的给出在线查看运行结果的网页链接。我的第一个动画是：“一个红色的小球从山顶滚下来，越滚越快，最后被山脚下的小猪佩奇踢了一脚，飞到了天空的白云上”



我希望您充当动画代码生成器，创建美观的动画的专家。生成的代码用python语言和pygame包实现，代码中所需要的图片资源素材，从百度搜索到的在线图片自行挑选合适的。请用在线python代码运行工具测试动画代码是否能够正常运行，能够正常运行的给出在线查看运行结果的网页链接。不需要给出源代码，只需要把最后在线查看动画的网页链接发给我。我的第一个动画是：“一个红色的小球从山顶滚下来，越滚越快，最后被山脚下的小猪佩奇踢了一脚，飞到了天空的白云上”


对话质量的指标或基准是用来评估对话系统的性能和效果的工具。有些指标是基于人类评价者的主观判断，有些指标是基于自动化的计算方法。一些常见的对话质量的指标或基准有：
• 流畅度：衡量对话系统生成的语言是否符合语法规则，是否通顺自然，是否有错别字或拼写错误等。
• 相关性：衡量对话系统生成的回复是否与用户输入或上下文相关，是否能回答用户的问题或满足用户的需求等。
• 多样性：衡量对话系统生成的回复是否有足够的变化和创新，是否避免了重复或陈词滥调等。
• 一致性：衡量对话系统生成的回复是否与自身或用户保持一致，是否遵循了逻辑和事实等。
• 情感：衡量对话系统生成的回复是否表达了适当和合理的情感，是否能引起用户的共鸣或兴趣等。
• 参与度：衡量对话系统生成的回复是否能吸引和维持用户与之交互，是否能激发用户提供更多信息或反馈等。
这些指标可以通过不同的方法来测量，例如问卷调查、打分、排名、偏好选择、转化率、停留时间等。


这取决于你的方法的目标和特点。一般来说，我认为你应该使用多个指标来评估你的方法，以充分反映它的优势和劣势。😊
如果你的方法是为了提高ChatGPT生成的对话质量，那么我建议你使用以下指标：
• 流畅度：因为这是对话系统生成语言的基本要求，也是用户对对话系统的第一印象。
• 相关性：因为这是对话系统与用户交互的核心，也是用户对对话系统是否有用和满意的重要因素。
• 多样性：因为这是对话系统展示其智能和创造力的方式，也是用户对对话系统是否有趣和吸引人的重要因素。
• 情感：因为这是对话系统与用户建立信任和亲密感的方式，也是用户对对话系统是否有人情味和个性化的重要因素。



如果您想进一步学习和实践prompt engineering，我建议您参考以下资源：

Promptstacks - ChatGPT Prompt Engineering Community：这是一个专门为ChatGPT设计和分享prompt的在线社区，您可以浏览和搜索各种类型和主题的prompt，也可以贡献自己的创意。
A Hands-on Guide to Prompt Engineering with ChatGPT and GPT-3：这是一篇介绍如何使用ChatGPT和GPT-3进行prompt engineering的教程文章，包含了许多实用的示例和代码。
A Prompt Pattern Catalog to Enhance Prompt Engineering with ChatGPT：这是一篇关于使用ChatGPT进行prompt engineering的学术论文，提出了一个基于模式的目录来系统化地构建优化的prompt。


六、 参考文献


